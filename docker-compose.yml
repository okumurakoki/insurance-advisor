version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: insurance_advisor_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-insurance_advisor_prod}
      MYSQL_USER: ${DB_USER:-insurance_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-insurance_password}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./docs/database-schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - insurance_network
    command: --default-authentication-plugin=mysql_native_password

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: insurance_advisor_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - insurance_network

  # Backend API
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: insurance_advisor_api
    restart: unless-stopped
    depends_on:
      - db
      - redis
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: ${DB_USER:-insurance_user}
      DB_PASSWORD: ${DB_PASSWORD:-insurance_password}
      DB_NAME: ${DB_NAME:-insurance_advisor_prod}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET}
      NOTEBOOK_LM_API_KEY: ${NOTEBOOK_LM_API_KEY}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
    ports:
      - "3000:3000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - insurance_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:3000/api}
    container_name: insurance_advisor_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - insurance_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: insurance_advisor_nginx
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - static_files:/usr/share/nginx/html/static
    depends_on:
      - api
      - frontend
    networks:
      - insurance_network

volumes:
  db_data:
  redis_data:
  static_files:

networks:
  insurance_network:
    driver: bridge